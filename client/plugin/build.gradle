import groovy.json.JsonBuilder

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'ivy-publish'

sourceSets {
    integrationTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/groovy')
        }
        resources.srcDir file('src/integTest/resources')
    }
}

group 'com.outlinegames'
version '1.0.0'

configurations {
    archives
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "org.codehaus.groovy:groovy-all:2.4.7"
    compile "com.google.code.gson:gson:2.8.0"
    compile 'com.google.guava:guava:20.0'
    compile 'org.yaml:snakeyaml:1.17'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-io:commons-io:2.5'


    testCompile gradleTestKit()
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4-rc-3') {
        exclude module: 'groovy-all'
    }
    testCompile 'org.apache.commons:commons-compress:1.12'

    archives project(path: ':client:unityPuppet', configuration: 'archives')
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

task getPuppet(type: Copy, dependsOn: ':client:unityPuppet:build') {
    from configurations.archives
    into 'src/main/resources'
}

classes.dependsOn getPuppet

compileGroovy.groovyOptions.configurationScript = file('src/groovyCompile/groovycConfig.groovy')

publishing {
    repositories {
        ivy {
            // change to point to your repo, e.g. http://my.org/repo
            url "${rootProject.buildDir}/repo"
        }
    }
    publications {
        ivy(IvyPublication) {
            from components.java
            artifact(jar) {
                type "source"
                conf "runtime"
            }
        }
    }
}
